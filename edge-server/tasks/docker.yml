- name: Add repository apt key
  become: true
  when: not docker_version
  ansible.builtin.apt_key:
    id: 9DC858229FC7DD38854AE2D88D81803C0EBFCD88
    state: present
    url: https://download.docker.com/linux/ubuntu/gpg

- name: Add repository to the apt sources
  become: true
  when: not docker_version
  ansible.builtin.apt_repository:
    state: present
    repo: "deb [arch={{ deb_arch }}] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable"

- name: Install packages
  become: true
  when: not docker_version
  notify:
    - Restart docker daemon
  with_items:
    - containerd.io
    - docker-buildx-plugin
    - docker-ce
    - docker-ce-cli
  ansible.builtin.apt:
    name: "{{ item }}"
    cache_valid_time: "{{ cache_valid_time }}"

- name: Add nvidia-docker apt key
  become: true
  when:
    - tapway_gpu_arch != "cpu"
    - not nvidia_docker
  ansible.builtin.apt_key:
    url: "{{ nvidia_docker_repo_gpg_url }}"
    state: present

- name: Add nvidia-docker repository to the apt sources
  become: true
  when:
    - tapway_gpu_arch != "cpu"
    - not nvidia_docker
  ansible.builtin.get_url:
    url: "{{ nvidia_docker_repo_base_url }}/{{ nvidia_distribution_name }}/nvidia-docker.list"
    dest: "/etc/apt/sources.list.d/nvidia-docker.list"
    mode: "0644"
    owner: root
    group: root

- name: Install nvidia-docker2
  become: true
  when:
    - tapway_gpu_arch != "cpu"
    - not nvidia_docker
  notify:
    - Restart docker daemon
  ansible.builtin.apt:
    name: nvidia-docker2
    state: present
    update_cache: true

- name: Create docker group
  become: true
  ansible.builtin.group:
    name: docker
    state: present

- name: Add user to the docker group
  become: true
  ansible.builtin.user:
    append: true
    groups: docker
    name: "{{ ansible_user_id }}"

- name: Configure docker daemon defaults
  become: true
  notify:
    - Restart docker daemon
  ansible.builtin.copy:
    src: "files/etc/docker/daemon.{{ deb_arch }}.json"
    dest: /etc/docker/daemon.json

- name: Check if reboot is required
  changed_when: reboot_required.stat.exists
  notify: Reboot
  register: reboot_required
  ansible.builtin.stat:
    get_checksum: false
    path: /var/run/reboot-required

- name: Flush handlers
  ansible.builtin.meta: flush_handlers
